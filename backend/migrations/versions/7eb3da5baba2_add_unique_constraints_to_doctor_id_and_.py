"""Add unique constraints to doctor_id and email

Revision ID: 7eb3da5baba2
Revises: 
Create Date: 2025-01-15 14:55:26.394803

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '7eb3da5baba2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('doctor', schema=None) as batch_op:
        batch_op.alter_column('first_name',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('doctor_id',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('department',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('hospital_name',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=False)

    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.alter_column('doctor_id',
               existing_type=mysql.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.alter_column('doctor_id',
               existing_type=mysql.INTEGER(),
               nullable=True)

    with op.batch_alter_table('doctor', schema=None) as batch_op:
        batch_op.alter_column('hospital_name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('department',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('doctor_id',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)

    # ### end Alembic commands ###
